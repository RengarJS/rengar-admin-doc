import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.DDmtCRY9.js";const k=JSON.parse('{"title":"图标","description":"","frontmatter":{},"headers":[],"relativePath":"action/icon.md","filePath":"action/icon.md"}'),l={name:"action/icon.md"};function n(p,s,h,o,d,r){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h1><h2 id="线上图标" tabindex="-1">线上图标 <a class="header-anchor" href="#线上图标" aria-label="Permalink to &quot;线上图标&quot;">​</a></h2><p><code>rengar-admin</code>内置了<a href="https://icones.js.org/" target="_blank" rel="noreferrer">iconify</a>的图标库，你可以直接使用这些图标。<strong>所有图标的前缀必须以<code>i-</code>开头</strong>。</p><ol><li>使用封装的组件引入：<div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SvgIcon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-ri-home-3-line&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><code>SvgIcon</code>会自动引入，无需手动引入</li><li>使用<code>class</code>的方式引入：<div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-ri-home-3-line&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>图标规则，i-[iconify 图标库名称]-[图标名称]</p></div></li></ol><h2 id="本地-svg-图标" tabindex="-1">本地 svg 图标 <a class="header-anchor" href="#本地-svg-图标" aria-label="Permalink to &quot;本地 svg 图标&quot;">​</a></h2><p>把需要使用的 svg 图标放到项目的<code>src/assets/svg-icons</code>目录下即可使用。<strong>所有图标的前缀必须以<code>i-loacal-</code>开头</strong>。</p><p>假如你有一个<code>src/assets/svg-icons/logo.svg</code>的图标，你可以这样使用：</p><ol><li>使用封装的组件引入：<div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SvgIcon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> local-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-local-logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>使用<code>class</code>的方式引入：<div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-local-logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><div class="tip custom-block"><p class="custom-block-title">提示</p><p>导入新图标后，需要重启项目</p></div>',9)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
